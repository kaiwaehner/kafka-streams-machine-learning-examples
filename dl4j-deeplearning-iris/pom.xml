<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.kaiwaehner.kafka.streams.machinelearning</groupId>
	<artifactId>dl4j-deeplearning-iris</artifactId>
	<version>CP55_AK25</version>

	<repositories>
		<repository>
			<id>confluent</id>
			<url>http://packages.confluent.io/maven/</url>
		</repository>
	</repositories>

	<properties>
		<java.version>1.8</java.version>
		<kafka.version>2.5.0</kafka.version>
		<kafka.scala.version>2.12</kafka.scala.version>
		<scala.version>${kafka.scala.version}.8</scala.version>
		<confluent.version>5.5.0</confluent.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>

		<!-- Kafka Streams API is the only dependency you need for building Streams 
			applications. The only other thing is the specific Machine Learning dependencies 
			for the models you want to build and / or deploy -->

		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-streams</artifactId>
			<version>${kafka.version}</version>
		</dependency>
    
		<!-- DeepLearning4J needs the following dependencies: 1) deeplearning4j-core, 
			which contains the neural network implementations 2) nd4j-native-platform, 
			the CPU version of the ND4J library that powers DL4J 3) datavec-api - Datavec 
			is our library vectorizing and loading data -->

		<!-- ND4J backend. You need one in every DL4J project. Normally define 
			artifactId as either "nd4j-native-platform" or "nd4j-cuda-7.5-platform" -->
		<!-- https://mvnrepository.com/artifact/org.nd4j/nd4j-native-platform -->
		<dependency>
			<groupId>org.nd4j</groupId>
			<artifactId>nd4j-native-platform</artifactId>
			<version>1.0.0-beta3</version>
		</dependency>

		<!-- Core DL4J functionality -->
		<!-- https://mvnrepository.com/artifact/org.deeplearning4j/deeplearning4j-core -->
		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>deeplearning4j-core</artifactId>
			<version>1.0.0-beta3</version>
		</dependency>

		<dependency>
    		<groupId>org.deeplearning4j</groupId>
    		<artifactId>deeplearning4j-modelimport</artifactId>
    		<version>1.0.0-beta3</version> 
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.3.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka_${kafka.scala.version}</artifactId>
			<version>${kafka.version}</version>
			<classifier>test</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>${kafka.version}</version>
			<classifier>test</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-streams</artifactId>
			<version>${kafka.version}</version>
			<classifier>test</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-test</artifactId>
			<version>2.9.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.confluent</groupId>
			<artifactId>kafka-schema-registry</artifactId>
			<version>${confluent.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.confluent</groupId>
			<artifactId>kafka-schema-registry</artifactId>
			<version>${confluent.version}</version>
			<!-- Required for e.g. schema registry's RestApp -->
			<classifier>tests</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
    		<groupId>org.hamcrest</groupId>
    		<artifactId>hamcrest</artifactId>
    		<version>2.1</version>
    		<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!--force java 8 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!--package as one fat jar -->
			<!-- this example does not contain actual application yet
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>com.github.megachucky.kafka.streams.machinelearning.StreamsStarterApp</mainClass>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>assemble-all</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			-->
		</plugins>
	</build>
</project>
